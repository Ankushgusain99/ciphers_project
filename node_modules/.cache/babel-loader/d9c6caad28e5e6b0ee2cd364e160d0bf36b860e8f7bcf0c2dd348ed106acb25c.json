{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\Pro\\\\ciphers\\\\src\\\\ui\\\\EncryptDecrypt.js\",\n  _s = $RefreshSig$();\nimport { Row, InputNumber, Input } from 'antd';\nimport React, { useState } from 'react';\nimport SmoothTextInput from './SmoothText';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CipherFactory({\n  encode,\n  decode,\n  keyComponentA,\n  keyComponentB,\n  keyComponentC\n}) {\n  _s();\n  const [leftText, setLeftText] = useState('');\n  const [rightText, setRightText] = useState('');\n  const [shift1, setShift1] = useState(keyComponentA === \"STR\" ? '' : 0);\n  const [shift2, setShift2] = useState(keyComponentB === \"STR\" ? \"\" : 0);\n  const setKey1 = userKeyInput => {\n    const text = keyComponentA === 'STR' ? userKeyInput.target.value : userKeyInput;\n    keyComponentA === \"STR\" ? setShift1(text) : setShift1(Number(text));\n    setRightText(encode(leftText, text, shift2));\n  };\n  const setKey2 = userKeyInput => {\n    const text = keyComponentB === 'STR' ? userKeyInput.target.value : userKeyInput;\n    keyComponentB === \"STR\" ? setShift2(text) : setShift2(Number(text));\n    setRightText(encode(leftText, shift1, text));\n  };\n  const handleLeftTextChange = event => {\n    const text = event.target.value;\n    setLeftText(text);\n    setRightText(encode(text, shift1, shift2));\n  };\n  const handleRightTextChange = event => {\n    const text = event.target.value;\n    setRightText(text);\n    setLeftText(decode(text, shift1, shift2));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [keyComponentA && /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex',\n        padding: '10px 10px 10px 0px'\n      },\n      children: keyComponentA === \"STR\" ? /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          flex: 0.5\n        },\n        addonAfter: \"Cipher Key\",\n        placeholder: \"SecretKey\",\n        value: shift1,\n        size: \"large\",\n        onChange: setKey1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 53\n      }, this) : /*#__PURE__*/_jsxDEV(InputNumber, {\n        style: {\n          flex: 0.4\n        },\n        addonBefore: \"Cipher Key A:\",\n        placeholder: \"Shift value\",\n        value: shift1,\n        size: \"large\",\n        onChange: setKey1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), keyComponentB && /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex',\n        padding: '10px 10px 10px 0px'\n      },\n      children: keyComponentB === \"STR\" ? /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          flex: 0.5\n        },\n        addonAfter: \"Cipher Key B:\",\n        placeholder: \"SecretKey\",\n        value: shift2,\n        size: \"large\",\n        onChange: setKey2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 53\n      }, this) : /*#__PURE__*/_jsxDEV(InputNumber, {\n        style: {\n          flex: 0.4\n        },\n        addonBefore: \"Cipher Key B:\",\n        placeholder: \"Shift value\",\n        value: shift2,\n        size: \"large\",\n        onChange: setKey2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SmoothTextInput, {\n        value: leftText,\n        isLeft: true,\n        onChange: handleLeftTextChange,\n        placeholder: \"Enter text to Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SmoothTextInput, {\n        value: rightText,\n        isLeft: false,\n        onChange: handleRightTextChange,\n        placeholder: \"Enter text to Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CipherFactory, \"P4PRwyYhNGub1k+1XKMhB3eAYgk=\");\n_c = CipherFactory;\n;\nvar _c;\n$RefreshReg$(_c, \"CipherFactory\");","map":{"version":3,"names":["Row","InputNumber","Input","React","useState","SmoothTextInput","jsxDEV","_jsxDEV","Fragment","_Fragment","CipherFactory","encode","decode","keyComponentA","keyComponentB","keyComponentC","_s","leftText","setLeftText","rightText","setRightText","shift1","setShift1","shift2","setShift2","setKey1","userKeyInput","text","target","value","Number","setKey2","handleLeftTextChange","event","handleRightTextChange","children","style","display","padding","flex","addonAfter","placeholder","size","onChange","fileName","_jsxFileName","lineNumber","columnNumber","addonBefore","isLeft","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/Pro/ciphers/src/ui/EncryptDecrypt.js"],"sourcesContent":["import { Row, InputNumber, Input } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport SmoothTextInput from './SmoothText';\r\n\r\nexport default function CipherFactory({ encode, decode, keyComponentA, keyComponentB, keyComponentC }) {\r\n    const [leftText, setLeftText] = useState('');\r\n    const [rightText, setRightText] = useState('');\r\n    const [shift1, setShift1] = useState(keyComponentA === \"STR\" ? '' : 0);\r\n    const [shift2, setShift2] = useState(keyComponentB === \"STR\" ? \"\" : 0);\r\n\r\n    const setKey1 = (userKeyInput) => {\r\n        const text = keyComponentA === 'STR' ? userKeyInput.target.value : userKeyInput;\r\n        keyComponentA === \"STR\" ? setShift1(text) : setShift1(Number(text));\r\n        setRightText(encode(leftText, text, shift2));\r\n    }\r\n\r\n    const setKey2 = (userKeyInput) => {\r\n        const text = keyComponentB === 'STR' ? userKeyInput.target.value : userKeyInput;\r\n        keyComponentB === \"STR\" ? setShift2(text) : setShift2(Number(text));\r\n        setRightText(encode(leftText, shift1, text));\r\n    }\r\n\r\n\r\n    const handleLeftTextChange = (event) => {\r\n        const text = event.target.value;\r\n        setLeftText(text);\r\n        setRightText(encode(text, shift1, shift2));\r\n    };\r\n\r\n    const handleRightTextChange = (event) => {\r\n        const text = event.target.value;\r\n        setRightText(text);\r\n        setLeftText(decode(text, shift1, shift2));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {keyComponentA &&\r\n                <Row style={{ display: 'flex', padding: '10px 10px 10px 0px' }}>\r\n                    {\r\n                        (keyComponentA === \"STR\") ? <Input style={{ flex: 0.5 }} addonAfter=\"Cipher Key\" placeholder='SecretKey' value={shift1} size='large' onChange={setKey1} />\r\n                            : <InputNumber style={{ flex: 0.4 }} addonBefore=\"Cipher Key A:\" placeholder=\"Shift value\" value={shift1} size='large' onChange={setKey1} />\r\n                    }\r\n                </Row>\r\n            }\r\n            {keyComponentB &&\r\n                <Row style={{ display: 'flex', padding: '10px 10px 10px 0px' }}>\r\n                    {\r\n                        (keyComponentB === \"STR\") ? <Input style={{ flex: 0.5 }} addonAfter=\"Cipher Key B:\" placeholder='SecretKey' value={shift2} size='large' onChange={setKey2} />\r\n                            : <InputNumber style={{ flex: 0.4 }} addonBefore=\"Cipher Key B:\" placeholder=\"Shift value\" value={shift2} size='large' onChange={setKey2} />\r\n                    }\r\n                </Row>\r\n            }\r\n            \r\n            <Row style={{ display: 'flex' }}>\r\n                <SmoothTextInput\r\n                    value={leftText}\r\n                    isLeft={true}\r\n                    onChange={handleLeftTextChange}\r\n                    placeholder=\"Enter text to Encrypt\"\r\n                />\r\n                <SmoothTextInput\r\n                    value={rightText}\r\n                    isLeft={false}\r\n                    onChange={handleRightTextChange}\r\n                    placeholder=\"Enter text to Decrypt\"\r\n                />\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}