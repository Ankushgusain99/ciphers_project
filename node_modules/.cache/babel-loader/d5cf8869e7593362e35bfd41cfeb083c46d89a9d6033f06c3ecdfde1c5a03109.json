{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\updated_ciphers\\\\ciphers_project\\\\src\\\\components\\\\ciphers\\\\Beaufort.js\";\nimport React from 'react';\nimport CipherFactory from '../../ui/EncryptDecrypt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BeaufortCipher() {\n  // Function to encrypt plaintext using the Autokey cipher\n  // Function to encrypt the plaintext using the Beaufort Cipher\n  function encode(plaintext, keyword) {\n    let ciphertext = '';\n    for (let i = 0; i < plaintext.length; i++) {\n      let plainChar = plaintext.charAt(i).toUpperCase();\n      let keyChar = keyword.charAt(i % keyword.length).toUpperCase();\n      let shift = keyChar.charCodeAt(0) - 65;\n      let cipherChar = String.fromCharCode((shift - (plainChar.charCodeAt(0) - 65) + 26) % 26 + 65);\n      ciphertext += cipherChar;\n    }\n    return ciphertext;\n  }\n\n  // Function to decrypt the ciphertext using the Beaufort Cipher\n  function decode(ciphertext, keyword) {\n    let plaintext = '';\n    for (let i = 0; i < ciphertext.length; i++) {\n      let cipherChar = ciphertext.charAt(i).toUpperCase();\n      let keyChar = keyword.charAt(i % keyword.length).toUpperCase();\n      let shift = keyChar.charCodeAt(0) - 65;\n      let plainChar = String.fromCharCode((shift - (cipherChar.charCodeAt(0) - 65) + 26) % 26 + 65);\n      plaintext += plainChar;\n    }\n    return plaintext;\n  }\n  return /*#__PURE__*/_jsxDEV(CipherFactory, {\n    encode: encode,\n    decode: decode,\n    keyComponentA: 'STR'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n_c = BeaufortCipher;\n;\nvar _c;\n$RefreshReg$(_c, \"BeaufortCipher\");","map":{"version":3,"names":["React","CipherFactory","jsxDEV","_jsxDEV","BeaufortCipher","encode","plaintext","keyword","ciphertext","i","length","plainChar","charAt","toUpperCase","keyChar","shift","charCodeAt","cipherChar","String","fromCharCode","decode","keyComponentA","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/updated_ciphers/ciphers_project/src/components/ciphers/Beaufort.js"],"sourcesContent":["import React from 'react';\r\nimport CipherFactory from '../../ui/EncryptDecrypt';\r\n\r\nexport default function BeaufortCipher() {\r\n    // Function to encrypt plaintext using the Autokey cipher\r\n// Function to encrypt the plaintext using the Beaufort Cipher\r\nfunction encode(plaintext, keyword) {\r\n    let ciphertext = '';\r\n    for (let i = 0; i < plaintext.length; i++) {\r\n        let plainChar = plaintext.charAt(i).toUpperCase();\r\n        let keyChar = keyword.charAt(i % keyword.length).toUpperCase();\r\n        let shift = (keyChar.charCodeAt(0) - 65);\r\n        let cipherChar = String.fromCharCode(((shift - (plainChar.charCodeAt(0) - 65) + 26) % 26) + 65);\r\n        ciphertext += cipherChar;\r\n    }\r\n    return ciphertext;\r\n}\r\n\r\n// Function to decrypt the ciphertext using the Beaufort Cipher\r\nfunction decode(ciphertext, keyword) {\r\n    let plaintext = '';\r\n    for (let i = 0; i < ciphertext.length; i++) {\r\n        let cipherChar = ciphertext.charAt(i).toUpperCase();\r\n        let keyChar = keyword.charAt(i % keyword.length).toUpperCase();\r\n        let shift = (keyChar.charCodeAt(0) - 65);\r\n        let plainChar = String.fromCharCode(((shift - (cipherChar.charCodeAt(0) - 65) + 26) % 26) + 65);\r\n        plaintext += plainChar;\r\n    }\r\n    return plaintext;\r\n}\r\n\r\n\r\n    \r\n    return <CipherFactory encode={encode} decode={decode} keyComponentA={'STR'} />\r\n};\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,cAAcA,CAAA,EAAG;EACrC;EACJ;EACA,SAASC,MAAMA,CAACC,SAAS,EAAEC,OAAO,EAAE;IAChC,IAAIC,UAAU,GAAG,EAAE;IACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,IAAIE,SAAS,GAAGL,SAAS,CAACM,MAAM,CAACH,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;MACjD,IAAIC,OAAO,GAAGP,OAAO,CAACK,MAAM,CAACH,CAAC,GAAGF,OAAO,CAACG,MAAM,CAAC,CAACG,WAAW,CAAC,CAAC;MAC9D,IAAIE,KAAK,GAAID,OAAO,CAACE,UAAU,CAAC,CAAC,CAAC,GAAG,EAAG;MACxC,IAAIC,UAAU,GAAGC,MAAM,CAACC,YAAY,CAAE,CAACJ,KAAK,IAAIJ,SAAS,CAACK,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAI,EAAE,CAAC;MAC/FR,UAAU,IAAIS,UAAU;IAC5B;IACA,OAAOT,UAAU;EACrB;;EAEA;EACA,SAASY,MAAMA,CAACZ,UAAU,EAAED,OAAO,EAAE;IACjC,IAAID,SAAS,GAAG,EAAE;IAClB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,UAAU,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACxC,IAAIQ,UAAU,GAAGT,UAAU,CAACI,MAAM,CAACH,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;MACnD,IAAIC,OAAO,GAAGP,OAAO,CAACK,MAAM,CAACH,CAAC,GAAGF,OAAO,CAACG,MAAM,CAAC,CAACG,WAAW,CAAC,CAAC;MAC9D,IAAIE,KAAK,GAAID,OAAO,CAACE,UAAU,CAAC,CAAC,CAAC,GAAG,EAAG;MACxC,IAAIL,SAAS,GAAGO,MAAM,CAACC,YAAY,CAAE,CAACJ,KAAK,IAAIE,UAAU,CAACD,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAI,EAAE,CAAC;MAC/FV,SAAS,IAAIK,SAAS;IAC1B;IACA,OAAOL,SAAS;EACpB;EAII,oBAAOH,OAAA,CAACF,aAAa;IAACI,MAAM,EAAEA,MAAO;IAACe,MAAM,EAAEA,MAAO;IAACC,aAAa,EAAE;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClF;AAACC,EAAA,GA/BuBtB,cAAc;AA+BrC;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}