{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\Pro\\\\ciphers\\\\src\\\\ui\\\\EncryptDecrypt.js\",\n  _s = $RefreshSig$();\nimport { Row, InputNumber, Input } from 'antd';\nimport React, { useState } from 'react';\nimport SmoothTextInput from './SmoothText';\n\n/**\r\n * \r\n * @param {Function} encode \r\n * @param {Function} decode \r\n * @param {number/string} keyComponentA\r\n * @param {number/string} keyComponentB\r\n * @param {number/string} keyComponentC\r\n * @returns \r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CipherFactory({\n  encode,\n  decode,\n  keyComponentA,\n  keyComponentB,\n  keyComponentC\n}) {\n  _s();\n  const [leftText, setLeftText] = useState('');\n  const [rightText, setRightText] = useState('');\n  const [shift1, setShift1] = useState(keyComponentA == \"STR\" ? '' : 0);\n  const [shift2, setShift2] = useState(keyComponentB == \"STR\" ? \"\" : 0);\n  const [shift3, setShift3] = useState(keyComponentC == \"\");\n  // For Interactive pages which automatically changes when keys are changed\n  const setKey1 = userKeyInput => {\n    let text = keyComponentA == 'STR' ? userKeyInput.target.value : userKeyInput;\n    keyComponentA == \"STR\" ? setShift1(text) : setShift1(Number(text));\n    setRightText(encode(leftText, text, shift2));\n  };\n  const setKey2 = userKeyInput => {\n    keyComponentB == \"STR\" ? setShift2(userKeyInput) : setShift2(Number(userKeyInput));\n    setRightText(encode(leftText, shift1, userKeyInput));\n  };\n  const setKey3 = userKeyInput => {\n    keyComponentC == \"STR\" ? setShift3(userKeyInput) : setShift3(userKeyInput);\n    setRightText(encode(leftText, shift3, userKeyInput));\n  };\n  const handleLeftTextChange = event => {\n    let text = event.target.value;\n    setLeftText(text);\n    setRightText(encode(text, shift1, shift2, shift3));\n  };\n  const handleRightTextChange = event => {\n    let text = event.target.value;\n    setRightText(text);\n    setLeftText(decode(text, shift1, shift2, shift3));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [keyComponentA && /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex',\n        padding: '10px 10px 10px 0px'\n      },\n      children: keyComponentA == \"STR\" ? /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          flex: 0.5\n        },\n        addonAfter: \"Cipher Key\",\n        placeholder: \"SecretKey\",\n        value: shift1,\n        size: \"large\",\n        onChange: setKey1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 52\n      }, this) : /*#__PURE__*/_jsxDEV(InputNumber, {\n        style: {\n          flex: 0.4\n        },\n        addonBefore: \"Cipher Key A:\",\n        placeholder: \"Shift value\",\n        value: shift1,\n        size: \"large\",\n        onChange: setKey1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), keyComponentB && /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex',\n        padding: '10px 10px 10px 0px'\n      },\n      children: keyComponentB == \"STR\" ? /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          flex: 0.5\n        },\n        addonAfter: \"Cipher Key B:\",\n        placeholder: \"SecretKey\",\n        value: shift2,\n        size: \"large\",\n        onChange: setKey2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 52\n      }, this) : /*#__PURE__*/_jsxDEV(InputNumber, {\n        style: {\n          flex: 0.4\n        },\n        addonBefore: \"Cipher Key B:\",\n        placeholder: \"Shift value\",\n        value: shift2,\n        size: \"large\",\n        onChange: setKey2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), keyComponentC && /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex',\n        padding: '10px 10px 10px 0px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          flex: 0.5\n        },\n        addonAfter: \"Cipher Key\",\n        placeholder: \"SecretKey\",\n        value: shift3,\n        size: \"large\",\n        onChange: setKey3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SmoothTextInput, {\n        value: leftText,\n        isLeft: true,\n        onChange: handleLeftTextChange,\n        placeholder: \"Enter text to Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SmoothTextInput, {\n        value: rightText,\n        isLeft: false,\n        onChange: handleRightTextChange,\n        placeholder: \"Enter text to Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CipherFactory, \"S+ne8vzrae3J6URbuUxAVcXWl9w=\");\n_c = CipherFactory;\n;\nvar _c;\n$RefreshReg$(_c, \"CipherFactory\");","map":{"version":3,"names":["Row","InputNumber","Input","React","useState","SmoothTextInput","jsxDEV","_jsxDEV","Fragment","_Fragment","CipherFactory","encode","decode","keyComponentA","keyComponentB","keyComponentC","_s","leftText","setLeftText","rightText","setRightText","shift1","setShift1","shift2","setShift2","shift3","setShift3","setKey1","userKeyInput","text","target","value","Number","setKey2","setKey3","handleLeftTextChange","event","handleRightTextChange","children","style","display","padding","flex","addonAfter","placeholder","size","onChange","fileName","_jsxFileName","lineNumber","columnNumber","addonBefore","isLeft","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/Pro/ciphers/src/ui/EncryptDecrypt.js"],"sourcesContent":["import { Row, InputNumber, Input } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport SmoothTextInput from './SmoothText';\r\n\r\n/**\r\n * \r\n * @param {Function} encode \r\n * @param {Function} decode \r\n * @param {number/string} keyComponentA\r\n * @param {number/string} keyComponentB\r\n * @param {number/string} keyComponentC\r\n * @returns \r\n */\r\nexport default function CipherFactory({ encode, decode, keyComponentA, keyComponentB,keyComponentC }) {\r\n    const [leftText, setLeftText] = useState('');\r\n    const [rightText, setRightText] = useState('');\r\n    const [shift1, setShift1] = useState(keyComponentA==\"STR\" ? '' : 0);\r\n    const [shift2, setShift2] = useState(keyComponentB==\"STR\" ? \"\" : 0);\r\n    const [shift3, setShift3] = useState(keyComponentC==\"\");\r\n     // For Interactive pages which automatically changes when keys are changed\r\n    const setKey1 = (userKeyInput) => {\r\n        let text = keyComponentA == 'STR' ? userKeyInput.target.value : userKeyInput;\r\n        keyComponentA == \"STR\" ? setShift1(text) : setShift1(Number(text));\r\n        setRightText(encode(leftText, text, shift2));\r\n    }\r\n    const setKey2 = (userKeyInput) => {\r\n        keyComponentB == \"STR\" ? setShift2(userKeyInput) : setShift2(Number(userKeyInput));\r\n        setRightText(encode(leftText, shift1, userKeyInput));\r\n    }\r\n    const setKey3 = (userKeyInput) => {\r\n        keyComponentC == \"STR\" ? setShift3(userKeyInput) : setShift3(userKeyInput);\r\n        setRightText(encode(leftText, shift3, userKeyInput));\r\n    }\r\n\r\n    const handleLeftTextChange = (event) => {\r\n        let text = event.target.value\r\n        setLeftText(text);\r\n        setRightText(encode(text, shift1, shift2,shift3));\r\n    };\r\n\r\n    const handleRightTextChange = (event) => {\r\n        let text = event.target.value\r\n        setRightText(text);\r\n        setLeftText(decode(text, shift1, shift2,shift3));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            \r\n            {keyComponentA &&\r\n                <Row style={{ display: 'flex', padding: '10px 10px 10px 0px' }}>\r\n                    {\r\n                        (keyComponentA == \"STR\") ? <Input style={{ flex: 0.5 }} addonAfter=\"Cipher Key\" placeholder='SecretKey' value={shift1} size='large' onChange={setKey1} />\r\n                            : <InputNumber style={{ flex: 0.4 }} addonBefore=\"Cipher Key A:\" placeholder=\"Shift value\" value={shift1} size='large' onChange={setKey1} />\r\n                    }\r\n                </Row>\r\n            }\r\n            {keyComponentB &&\r\n                <Row style={{ display: 'flex', padding: '10px 10px 10px 0px' }}>\r\n                    {\r\n                        (keyComponentB == \"STR\") ? <Input style={{ flex: 0.5 }} addonAfter=\"Cipher Key B:\" placeholder='SecretKey' value={shift2} size='large' onChange={setKey2} />\r\n                            : <InputNumber style={{ flex: 0.4 }} addonBefore=\"Cipher Key B:\" placeholder=\"Shift value\" value={shift2} size='large' onChange={setKey2} />\r\n                    }\r\n                </Row>\r\n            }\r\n            {keyComponentC &&\r\n                <Row style={{ display: 'flex', padding: '10px 10px 10px 0px' }}>\r\n                    {\r\n                        <Input style={{ flex: 0.5 }} addonAfter=\"Cipher Key\" placeholder='SecretKey' value={shift3} size='large' onChange={setKey3} />\r\n                            \r\n                    }\r\n                </Row>\r\n            }\r\n            <Row style={{ display: 'flex' }}>\r\n                <SmoothTextInput\r\n                    value={leftText}\r\n                    isLeft={true}\r\n                    onChange={handleLeftTextChange}\r\n                    placeholder=\"Enter text to Encrypt\"\r\n                />\r\n                <SmoothTextInput\r\n                    value={rightText}\r\n                    isLeft={false}\r\n                    onChange={handleRightTextChange}\r\n                    placeholder=\"Enter text to Decrypt\"\r\n                />\r\n            </Row>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}