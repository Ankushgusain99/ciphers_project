{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\Pro\\\\ciphers\\\\src\\\\components\\\\ciphers\\\\BookCipher.js\";\nimport React from 'react';\nimport CipherFactory from '../../ui/EncryptDecrypt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookCipher = () => {\n  function getPositionInKey(text, key) {\n    const positions = [];\n    const keyWords = key.split(/\\s+/);\n    for (let char of text) {\n      const charUpper = char.toUpperCase();\n      for (let i = 0; i < keyWords.length; i++) {\n        if (keyWords[i].includes(charUpper)) {\n          positions.push({\n            word: i + 1,\n            char: keyWords[i].indexOf(charUpper) + 1\n          });\n          break;\n        }\n      }\n    }\n    return positions;\n  }\n  function encode(plaintext, key) {\n    const positions = getPositionInKey(plaintext, key);\n    return positions.map(pos => `${pos.word}.${pos.char}`).join(' ');\n  }\n  function decode(ciphertext, key) {\n    const keyWords = key.split(/\\s+/);\n    const positions = ciphertext.split(' ');\n    let plaintext = '';\n    for (let pos of positions) {\n      const [wordIndex, charIndex] = pos.split('.').map(Number);\n      plaintext += keyWords[wordIndex - 1][charIndex - 1];\n    }\n    return plaintext;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CipherFactory, {\n      encode: encode,\n      decode: decode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = BookCipher;\nexport default BookCipher;\nvar _c;\n$RefreshReg$(_c, \"BookCipher\");","map":{"version":3,"names":["React","CipherFactory","jsxDEV","_jsxDEV","BookCipher","getPositionInKey","text","key","positions","keyWords","split","char","charUpper","toUpperCase","i","length","includes","push","word","indexOf","encode","plaintext","map","pos","join","decode","ciphertext","wordIndex","charIndex","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/Pro/ciphers/src/components/ciphers/BookCipher.js"],"sourcesContent":["import React from 'react'\r\nimport CipherFactory from '../../ui/EncryptDecrypt';\r\n\r\nconst BookCipher = () => {\r\n  function getPositionInKey(text, key) {\r\n    const positions = [];\r\n    const keyWords = key.split(/\\s+/);\r\n\r\n    for (let char of text) {\r\n        const charUpper = char.toUpperCase();\r\n        for (let i = 0; i < keyWords.length; i++) {\r\n            if (keyWords[i].includes(charUpper)) {\r\n                positions.push({ word: i + 1, char: keyWords[i].indexOf(charUpper) + 1 });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return positions;\r\n}\r\n\r\nfunction encode(plaintext, key) {\r\n  const positions = getPositionInKey(plaintext, key);\r\n  return positions.map(pos => `${pos.word}.${pos.char}`).join(' ');\r\n}\r\n\r\nfunction decode(ciphertext, key) {\r\n  const keyWords = key.split(/\\s+/);\r\n  const positions = ciphertext.split(' ');\r\n  let plaintext = '';\r\n\r\n  for (let pos of positions) {\r\n      const [wordIndex, charIndex] = pos.split('.').map(Number);\r\n      plaintext += keyWords[wordIndex - 1][charIndex - 1];\r\n  }\r\n\r\n  return plaintext;\r\n}\r\n\r\n  return (\r\n    <div>\r\n        <CipherFactory encode={encode} decode={decode} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookCipher\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,SAASC,gBAAgBA,CAACC,IAAI,EAAEC,GAAG,EAAE;IACnC,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,QAAQ,GAAGF,GAAG,CAACG,KAAK,CAAC,KAAK,CAAC;IAEjC,KAAK,IAAIC,IAAI,IAAIL,IAAI,EAAE;MACnB,MAAMM,SAAS,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;MACpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,IAAIL,QAAQ,CAACK,CAAC,CAAC,CAACE,QAAQ,CAACJ,SAAS,CAAC,EAAE;UACjCJ,SAAS,CAACS,IAAI,CAAC;YAAEC,IAAI,EAAEJ,CAAC,GAAG,CAAC;YAAEH,IAAI,EAAEF,QAAQ,CAACK,CAAC,CAAC,CAACK,OAAO,CAACP,SAAS,CAAC,GAAG;UAAE,CAAC,CAAC;UACzE;QACJ;MACJ;IACJ;IAEA,OAAOJ,SAAS;EACpB;EAEA,SAASY,MAAMA,CAACC,SAAS,EAAEd,GAAG,EAAE;IAC9B,MAAMC,SAAS,GAAGH,gBAAgB,CAACgB,SAAS,EAAEd,GAAG,CAAC;IAClD,OAAOC,SAAS,CAACc,GAAG,CAACC,GAAG,IAAK,GAAEA,GAAG,CAACL,IAAK,IAAGK,GAAG,CAACZ,IAAK,EAAC,CAAC,CAACa,IAAI,CAAC,GAAG,CAAC;EAClE;EAEA,SAASC,MAAMA,CAACC,UAAU,EAAEnB,GAAG,EAAE;IAC/B,MAAME,QAAQ,GAAGF,GAAG,CAACG,KAAK,CAAC,KAAK,CAAC;IACjC,MAAMF,SAAS,GAAGkB,UAAU,CAAChB,KAAK,CAAC,GAAG,CAAC;IACvC,IAAIW,SAAS,GAAG,EAAE;IAElB,KAAK,IAAIE,GAAG,IAAIf,SAAS,EAAE;MACvB,MAAM,CAACmB,SAAS,EAAEC,SAAS,CAAC,GAAGL,GAAG,CAACb,KAAK,CAAC,GAAG,CAAC,CAACY,GAAG,CAACO,MAAM,CAAC;MACzDR,SAAS,IAAIZ,QAAQ,CAACkB,SAAS,GAAG,CAAC,CAAC,CAACC,SAAS,GAAG,CAAC,CAAC;IACvD;IAEA,OAAOP,SAAS;EAClB;EAEE,oBACElB,OAAA;IAAA2B,QAAA,eACI3B,OAAA,CAACF,aAAa;MAACmB,MAAM,EAAEA,MAAO;MAACK,MAAM,EAAEA;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAAC,EAAA,GAzCK/B,UAAU;AA2ChB,eAAeA,UAAU;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}