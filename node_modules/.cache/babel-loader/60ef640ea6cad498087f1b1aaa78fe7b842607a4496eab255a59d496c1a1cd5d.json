{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\updated_ciphers\\\\ciphers_project\\\\src\\\\components\\\\ciphers\\\\CipherAscii.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport CipherFactory from '../../ui/EncryptDecrypt';\nimport CipherOverview from '../../ui/CipherOverview';\nimport { Header, Description, Example, References } from '../../overviews/AsciiOverview';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CipherAscii() {\n  _s();\n  console.log(\"Hello Ascii\");\n  const [showOverview, setShowOverview] = React.useState(false);\n  // Encode a string using ASCII cipher\n  function encode(str) {\n    var result = '';\n    for (var i = 0; i < str.length; i++) {\n      result += str.charCodeAt(i) + '-';\n    }\n    return result;\n  }\n\n  // Decode a string using ASCII cipher\n  function decode(str) {\n    var result = '';\n    var elements = str.split('-');\n    for (var i = 0; i < elements.length; i++) {\n      result += String.fromCharCode(elements[i]);\n    }\n    return result;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showOverview && /*#__PURE__*/_jsxDEV(CipherOverview, {\n      setShowOverview: setShowOverview,\n      Header: Header,\n      Description: Description,\n      Example: Example,\n      References: References\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CipherFactory, {\n      title: \"Ascii Cipher\",\n      setShowOverview: setShowOverview,\n      encode: encode,\n      decode: decode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CipherAscii, \"aKVuUYg972ieEnXf0VLOX2nEfTA=\");\n_c = CipherAscii;\n;\nvar _c;\n$RefreshReg$(_c, \"CipherAscii\");","map":{"version":3,"names":["React","CipherFactory","CipherOverview","Header","Description","Example","References","jsxDEV","_jsxDEV","Fragment","_Fragment","CipherAscii","_s","console","log","showOverview","setShowOverview","useState","encode","str","result","i","length","charCodeAt","decode","elements","split","String","fromCharCode","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/updated_ciphers/ciphers_project/src/components/ciphers/CipherAscii.js"],"sourcesContent":["import React from 'react';\r\nimport CipherFactory from '../../ui/EncryptDecrypt';\r\nimport CipherOverview from '../../ui/CipherOverview';\r\nimport { Header,\r\n  Description,\r\n  Example,\r\n  References\r\n } from '../../overviews/AsciiOverview';\r\nexport default function CipherAscii() {\r\n  console.log(\"Hello Ascii\")\r\n  const [showOverview, setShowOverview] = React.useState(false);\r\n// Encode a string using ASCII cipher\r\nfunction encode(str) {\r\n    var result = '';\r\n    for (var i = 0; i < str.length; i++) {\r\n      result += str.charCodeAt(i) + '-';\r\n    }\r\n    return result;\r\n  }\r\n  \r\n  // Decode a string using ASCII cipher\r\n  function decode(str) {\r\n    var result = '';\r\n    var elements = str.split('-');\r\n    for (var i = 0; i < elements.length; i++) {\r\n      result += String.fromCharCode(elements[i]);\r\n    }\r\n    return result;\r\n  }      \r\n  \r\n  return (\r\n    <>\r\n      {showOverview && (\r\n        <CipherOverview\r\n          setShowOverview={setShowOverview}\r\n          Header={Header}\r\n          Description={Description}\r\n          Example={Example}\r\n          References={References}\r\n        />\r\n      )}\r\n      <CipherFactory\r\n        title={\"Ascii Cipher\"}\r\n        setShowOverview = {setShowOverview}\r\n        encode={encode}\r\n        decode={decode}\r\n      />\r\n    </>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,MAAM,EACbC,WAAW,EACXC,OAAO,EACPC,UAAU,QACJ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpCC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC/D;EACA,SAASC,MAAMA,CAACC,GAAG,EAAE;IACjB,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACnCD,MAAM,IAAID,GAAG,CAACI,UAAU,CAACF,CAAC,CAAC,GAAG,GAAG;IACnC;IACA,OAAOD,MAAM;EACf;;EAEA;EACA,SAASI,MAAMA,CAACL,GAAG,EAAE;IACnB,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIK,QAAQ,GAAGN,GAAG,CAACO,KAAK,CAAC,GAAG,CAAC;IAC7B,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,QAAQ,CAACH,MAAM,EAAED,CAAC,EAAE,EAAE;MACxCD,MAAM,IAAIO,MAAM,CAACC,YAAY,CAACH,QAAQ,CAACJ,CAAC,CAAC,CAAC;IAC5C;IACA,OAAOD,MAAM;EACf;EAEA,oBACEZ,OAAA,CAAAE,SAAA;IAAAmB,QAAA,GACGd,YAAY,iBACXP,OAAA,CAACN,cAAc;MACbc,eAAe,EAAEA,eAAgB;MACjCb,MAAM,EAAEA,MAAO;MACfC,WAAW,EAAEA,WAAY;MACzBC,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA;IAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF,eACDzB,OAAA,CAACP,aAAa;MACZiC,KAAK,EAAE,cAAe;MACtBlB,eAAe,EAAIA,eAAgB;MACnCE,MAAM,EAAEA,MAAO;MACfM,MAAM,EAAEA;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA,eACF,CAAC;AAEP;AAACrB,EAAA,CAzCuBD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAyClC;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}