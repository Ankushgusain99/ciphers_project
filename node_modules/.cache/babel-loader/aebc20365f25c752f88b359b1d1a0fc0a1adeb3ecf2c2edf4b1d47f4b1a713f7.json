{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\updated_ciphers\\\\ciphers_project\\\\src\\\\components\\\\ciphers\\\\caesar.js\",\n  _s = $RefreshSig$();\n//TODO: import useState from react\nimport React, { useState } from \"react\";\nimport CipherFactory from \"../../ui/EncryptDecrypt\";\n//TODO: Import CipherOverview component\nimport CipherOverview from \"../../ui/CipherOverview\";\n\n//TODO: import components from overview component\nimport { Header, Description, References, Example } from \"../../overviews/CaesarOverview\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CaesarCipher(props) {\n  _s();\n  const [showOverview, setShowOverview] = useState(false);\n  function encode(str, shift) {\n    const chars = str.split(\"\");\n    const encodedChars = chars.map(char => {\n      const charCode = char.charCodeAt(0);\n      let newCharCode = charCode + shift;\n      if (charCode >= 65 && charCode <= 90) {\n        if (newCharCode < 65) {\n          newCharCode = 90 - (65 - newCharCode - 1);\n        } else if (newCharCode > 90) {\n          newCharCode = 65 + (newCharCode - 90 - 1);\n        }\n      } else if (charCode >= 97 && charCode <= 122) {\n        if (newCharCode < 97) {\n          newCharCode = 122 - (97 - newCharCode - 1);\n        } else if (newCharCode > 122) {\n          newCharCode = 97 + (newCharCode - 122 - 1);\n        }\n      }\n      return String.fromCharCode(newCharCode);\n    });\n    return encodedChars.join(\"\");\n  }\n  function decode(str, shift) {\n    return encode(str, -shift);\n  }\n  //TODO:  Add the CipherOverview component in the return statement.\n  //TODO:  Add title and setShowOverview attribute to the CipherFactory component.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showOverview && /*#__PURE__*/_jsxDEV(CipherOverview, {\n      setShowOverview: setShowOverview,\n      Header: Header,\n      Description: Description,\n      Example: Example,\n      References: References\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CipherFactory, {\n      title: \"Caesar Cipher\",\n      setShowOverview: setShowOverview,\n      encode: encode,\n      decode: decode,\n      keyComponentA: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CaesarCipher, \"aKVuUYg972ieEnXf0VLOX2nEfTA=\");\n_c = CaesarCipher;\nvar _c;\n$RefreshReg$(_c, \"CaesarCipher\");","map":{"version":3,"names":["React","useState","CipherFactory","CipherOverview","Header","Description","References","Example","jsxDEV","_jsxDEV","Fragment","_Fragment","CaesarCipher","props","_s","showOverview","setShowOverview","encode","str","shift","chars","split","encodedChars","map","char","charCode","charCodeAt","newCharCode","String","fromCharCode","join","decode","children","fileName","_jsxFileName","lineNumber","columnNumber","title","keyComponentA","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/updated_ciphers/ciphers_project/src/components/ciphers/caesar.js"],"sourcesContent":["//TODO: import useState from react\r\nimport React, { useState } from \"react\";\r\nimport CipherFactory from \"../../ui/EncryptDecrypt\";\r\n//TODO: Import CipherOverview component\r\nimport CipherOverview from \"../../ui/CipherOverview\";\r\n\r\n//TODO: import components from overview component\r\nimport { Header,\r\n    Description,\r\n  References,\r\n  Example,\r\n } from \"../../overviews/CaesarOverview\";\r\n\r\nexport default function CaesarCipher(props) {\r\n  const [showOverview, setShowOverview] = useState(false);\r\n  function encode(str, shift) {\r\n    const chars = str.split(\"\");\r\n\r\n    const encodedChars = chars.map((char) => {\r\n      const charCode = char.charCodeAt(0);\r\n      let newCharCode = charCode + shift;\r\n      if (charCode >= 65 && charCode <= 90) {\r\n        if (newCharCode < 65) {\r\n          newCharCode = 90 - (65 - newCharCode - 1);\r\n        } else if (newCharCode > 90) {\r\n          newCharCode = 65 + (newCharCode - 90 - 1);\r\n        }\r\n      } else if (charCode >= 97 && charCode <= 122) {\r\n        if (newCharCode < 97) {\r\n          newCharCode = 122 - (97 - newCharCode - 1);\r\n        } else if (newCharCode > 122) {\r\n          newCharCode = 97 + (newCharCode - 122 - 1);\r\n        }\r\n      }\r\n      return String.fromCharCode(newCharCode);\r\n    });\r\n\r\n    return encodedChars.join(\"\");\r\n  }\r\n\r\n  function decode(str, shift) {\r\n    return encode(str, -shift);\r\n  }\r\n  //TODO:  Add the CipherOverview component in the return statement.\r\n  //TODO:  Add title and setShowOverview attribute to the CipherFactory component.\r\n  return (\r\n    <>\r\n      {showOverview && (\r\n        <CipherOverview\r\n          setShowOverview={setShowOverview}\r\n          Header={Header}\r\n          Description={Description}\r\n          Example={Example}\r\n          References={References}\r\n        />\r\n      )}\r\n      <CipherFactory\r\n        title={\"Caesar Cipher\"}\r\n        setShowOverview = {setShowOverview}\r\n        encode={encode}\r\n        decode={decode}\r\n        keyComponentA={1}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,yBAAyB;AACnD;AACA,OAAOC,cAAc,MAAM,yBAAyB;;AAEpD;AACA,SAASC,MAAM,EACXC,WAAW,EACbC,UAAU,EACVC,OAAO,QACD,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,SAASgB,MAAMA,CAACC,GAAG,EAAEC,KAAK,EAAE;IAC1B,MAAMC,KAAK,GAAGF,GAAG,CAACG,KAAK,CAAC,EAAE,CAAC;IAE3B,MAAMC,YAAY,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;MACvC,MAAMC,QAAQ,GAAGD,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC;MACnC,IAAIC,WAAW,GAAGF,QAAQ,GAAGN,KAAK;MAClC,IAAIM,QAAQ,IAAI,EAAE,IAAIA,QAAQ,IAAI,EAAE,EAAE;QACpC,IAAIE,WAAW,GAAG,EAAE,EAAE;UACpBA,WAAW,GAAG,EAAE,IAAI,EAAE,GAAGA,WAAW,GAAG,CAAC,CAAC;QAC3C,CAAC,MAAM,IAAIA,WAAW,GAAG,EAAE,EAAE;UAC3BA,WAAW,GAAG,EAAE,IAAIA,WAAW,GAAG,EAAE,GAAG,CAAC,CAAC;QAC3C;MACF,CAAC,MAAM,IAAIF,QAAQ,IAAI,EAAE,IAAIA,QAAQ,IAAI,GAAG,EAAE;QAC5C,IAAIE,WAAW,GAAG,EAAE,EAAE;UACpBA,WAAW,GAAG,GAAG,IAAI,EAAE,GAAGA,WAAW,GAAG,CAAC,CAAC;QAC5C,CAAC,MAAM,IAAIA,WAAW,GAAG,GAAG,EAAE;UAC5BA,WAAW,GAAG,EAAE,IAAIA,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC;QAC5C;MACF;MACA,OAAOC,MAAM,CAACC,YAAY,CAACF,WAAW,CAAC;IACzC,CAAC,CAAC;IAEF,OAAOL,YAAY,CAACQ,IAAI,CAAC,EAAE,CAAC;EAC9B;EAEA,SAASC,MAAMA,CAACb,GAAG,EAAEC,KAAK,EAAE;IAC1B,OAAOF,MAAM,CAACC,GAAG,EAAE,CAACC,KAAK,CAAC;EAC5B;EACA;EACA;EACA,oBACEV,OAAA,CAAAE,SAAA;IAAAqB,QAAA,GACGjB,YAAY,iBACXN,OAAA,CAACN,cAAc;MACba,eAAe,EAAEA,eAAgB;MACjCZ,MAAM,EAAEA,MAAO;MACfC,WAAW,EAAEA,WAAY;MACzBE,OAAO,EAAEA,OAAQ;MACjBD,UAAU,EAAEA;IAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF,eACD3B,OAAA,CAACP,aAAa;MACZmC,KAAK,EAAE,eAAgB;MACvBrB,eAAe,EAAIA,eAAgB;MACnCC,MAAM,EAAEA,MAAO;MACfc,MAAM,EAAEA,MAAO;MACfO,aAAa,EAAE;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA,eACF,CAAC;AAEP;AAACtB,EAAA,CApDuBF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}