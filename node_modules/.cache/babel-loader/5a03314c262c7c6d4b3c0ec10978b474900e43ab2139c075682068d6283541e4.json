{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\Pro\\\\ciphers\\\\src\\\\ui\\\\EncryptDecrypt.js\",\n  _s = $RefreshSig$();\nimport { Row, InputNumber, Input } from 'antd';\nimport React, { useState } from 'react';\nimport SmoothTextInput from './SmoothText';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CipherFactory({\n  encode,\n  decode,\n  keyComponentA,\n  keyComponentB\n}) {\n  _s();\n  const [leftText, setLeftText] = useState('');\n  const [rightText, setRightText] = useState('');\n  const [key1, setKey1] = useState(keyComponentA === 'STR' ? '' : 0);\n  const [key2, setKey2] = useState(keyComponentB === 'STR' ? '' : 0);\n  const handleKey1Change = event => {\n    const value = event.target.value;\n    setKey1(value);\n    setRightText(encode(leftText, value, key2));\n  };\n  const handleKey2Change = event => {\n    const value = event.target.value;\n    setKey2(value);\n    setRightText(encode(leftText, key1, value));\n  };\n  const handleLeftTextChange = event => {\n    const value = event.target.value;\n    setLeftText(value);\n    setRightText(encode(value, key1, key2));\n  };\n  const handleRightTextChange = event => {\n    const value = event.target.value;\n    setRightText(value);\n    setLeftText(decode(value, key1, key2));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [keyComponentA && /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex',\n        padding: '10px 10px 10px 0px'\n      },\n      children: keyComponentA === 'STR' ? /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          flex: 0.5\n        },\n        addonAfter: \"Cipher Key A\",\n        placeholder: \"Secret Key\",\n        value: key1,\n        size: \"large\",\n        onChange: handleKey1Change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(InputNumber, {\n        style: {\n          flex: 0.4\n        },\n        addonBefore: \"Cipher Key A:\",\n        placeholder: \"Shift value\",\n        value: key1,\n        size: \"large\",\n        onChange: handleKey1Change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), keyComponentB && /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex',\n        padding: '10px 10px 10px 0px'\n      },\n      children: keyComponentB === 'STR' ? /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          flex: 0.5\n        },\n        addonAfter: \"Cipher Key B\",\n        placeholder: \"Secret Key\",\n        value: key2,\n        size: \"large\",\n        onChange: handleKey2Change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(InputNumber, {\n        style: {\n          flex: 0.4\n        },\n        addonBefore: \"Cipher Key B:\",\n        placeholder: \"Shift value\",\n        value: key2,\n        size: \"large\",\n        onChange: handleKey2Change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SmoothTextInput, {\n        value: leftText,\n        isLeft: true,\n        onChange: handleLeftTextChange,\n        placeholder: \"Enter text to Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SmoothTextInput, {\n        value: rightText,\n        isLeft: false,\n        onChange: handleRightTextChange,\n        placeholder: \"Enter text to Decrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CipherFactory, \"LlEs67Nf03m99sVBDatGg2aavkM=\");\n_c = CipherFactory;\nvar _c;\n$RefreshReg$(_c, \"CipherFactory\");","map":{"version":3,"names":["Row","InputNumber","Input","React","useState","SmoothTextInput","jsxDEV","_jsxDEV","Fragment","_Fragment","CipherFactory","encode","decode","keyComponentA","keyComponentB","_s","leftText","setLeftText","rightText","setRightText","key1","setKey1","key2","setKey2","handleKey1Change","event","value","target","handleKey2Change","handleLeftTextChange","handleRightTextChange","children","style","display","padding","flex","addonAfter","placeholder","size","onChange","fileName","_jsxFileName","lineNumber","columnNumber","addonBefore","isLeft","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/Pro/ciphers/src/ui/EncryptDecrypt.js"],"sourcesContent":["import { Row, InputNumber, Input } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport SmoothTextInput from './SmoothText';\r\n\r\nexport default function CipherFactory({ encode, decode, keyComponentA, keyComponentB }) {\r\n    const [leftText, setLeftText] = useState('');\r\n    const [rightText, setRightText] = useState('');\r\n    const [key1, setKey1] = useState(keyComponentA === 'STR' ? '' : 0);\r\n    const [key2, setKey2] = useState(keyComponentB === 'STR' ? '' : 0);\r\n\r\n    const handleKey1Change = (event) => {\r\n        const value = event.target.value;\r\n        setKey1(value);\r\n        setRightText(encode(leftText, value, key2));\r\n    };\r\n\r\n    const handleKey2Change = (event) => {\r\n        const value = event.target.value;\r\n        setKey2(value);\r\n        setRightText(encode(leftText, key1, value));\r\n    };\r\n\r\n    const handleLeftTextChange = (event) => {\r\n        const value = event.target.value;\r\n        setLeftText(value);\r\n        setRightText(encode(value, key1, key2));\r\n    };\r\n\r\n    const handleRightTextChange = (event) => {\r\n        const value = event.target.value;\r\n        setRightText(value);\r\n        setLeftText(decode(value, key1, key2));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {keyComponentA && (\r\n                <Row style={{ display: 'flex', padding: '10px 10px 10px 0px' }}>\r\n                    {keyComponentA === 'STR' ? (\r\n                        <Input\r\n                            style={{ flex: 0.5 }}\r\n                            addonAfter=\"Cipher Key A\"\r\n                            placeholder=\"Secret Key\"\r\n                            value={key1}\r\n                            size=\"large\"\r\n                            onChange={handleKey1Change}\r\n                        />\r\n                    ) : (\r\n                        <InputNumber\r\n                            style={{ flex: 0.4 }}\r\n                            addonBefore=\"Cipher Key A:\"\r\n                            placeholder=\"Shift value\"\r\n                            value={key1}\r\n                            size=\"large\"\r\n                            onChange={handleKey1Change}\r\n                        />\r\n                    )}\r\n                </Row>\r\n            )}\r\n            {keyComponentB && (\r\n                <Row style={{ display: 'flex', padding: '10px 10px 10px 0px' }}>\r\n                    {keyComponentB === 'STR' ? (\r\n                        <Input\r\n                            style={{ flex: 0.5 }}\r\n                            addonAfter=\"Cipher Key B\"\r\n                            placeholder=\"Secret Key\"\r\n                            value={key2}\r\n                            size=\"large\"\r\n                            onChange={handleKey2Change}\r\n                        />\r\n                    ) : (\r\n                        <InputNumber\r\n                            style={{ flex: 0.4 }}\r\n                            addonBefore=\"Cipher Key B:\"\r\n                            placeholder=\"Shift value\"\r\n                            value={key2}\r\n                            size=\"large\"\r\n                            onChange={handleKey2Change}\r\n                        />\r\n                    )}\r\n                </Row>\r\n            )}\r\n            <Row style={{ display: 'flex' }}>\r\n                <SmoothTextInput\r\n                    value={leftText}\r\n                    isLeft={true}\r\n                    onChange={handleLeftTextChange}\r\n                    placeholder=\"Enter text to Encrypt\"\r\n                />\r\n                <SmoothTextInput\r\n                    value={rightText}\r\n                    isLeft={false}\r\n                    onChange={handleRightTextChange}\r\n                    placeholder=\"Enter text to Decrypt\"\r\n                />\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}