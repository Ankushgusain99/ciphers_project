{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\updated_ciphers\\\\ciphers_project\\\\src\\\\components\\\\ciphers\\\\MasonicCipher.js\";\nimport React from 'react';\nimport CipherFactory from '../../ui/EncryptDecrypt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Masonic() {\n  const pigpenCipher = {\n    'A': '᚜',\n    'B': '᚛',\n    'C': 'ᚠ',\n    'D': 'ᛏ',\n    'E': 'ᛒ',\n    'F': 'ᛖ',\n    'G': 'ᛗ',\n    'H': 'ᛝ',\n    'I': 'ᛟ',\n    'J': 'ᛠ',\n    'K': 'ᛡ',\n    'L': 'ᛢ',\n    'M': 'ᛣ',\n    'N': 'ᛤ',\n    'O': 'ᛥ',\n    'P': 'ᛦ',\n    'Q': 'ᛧ',\n    'R': 'ᛨ',\n    'S': 'ᛩ',\n    'T': 'ᛪ',\n    'U': '᛫',\n    'V': '᛬',\n    'W': '᛭',\n    'X': 'ᛮ',\n    'Y': 'ᛯ',\n    'Z': 'ᛰ'\n  };\n  const reversePigpenCipher = Object.fromEntries(Object.entries(pigpenCipher).map(([letter, symbol]) => [symbol, letter]));\n  function encode(plaintext) {\n    return plaintext.toUpperCase().replace(/[^A-Z]/g, '').split('').map(char => pigpenCipher[char] || char).join('');\n  }\n  function decode(ciphertext) {\n    return ciphertext.split('').map(symbol => reversePigpenCipher[symbol] || symbol).join('');\n  }\n  return /*#__PURE__*/_jsxDEV(CipherFactory, {\n    encode: encode,\n    decode: decode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 14\n  }, this);\n}\n_c = Masonic;\n;\nvar _c;\n$RefreshReg$(_c, \"Masonic\");","map":{"version":3,"names":["React","CipherFactory","jsxDEV","_jsxDEV","Masonic","pigpenCipher","reversePigpenCipher","Object","fromEntries","entries","map","letter","symbol","encode","plaintext","toUpperCase","replace","split","char","join","decode","ciphertext","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/updated_ciphers/ciphers_project/src/components/ciphers/MasonicCipher.js"],"sourcesContent":["import React from 'react';\r\nimport CipherFactory from '../../ui/EncryptDecrypt';\r\n\r\nexport default function Masonic() {\r\n\r\n    const pigpenCipher = {\r\n        'A': '᚜', 'B': '᚛', 'C': 'ᚠ', 'D': 'ᛏ', 'E': 'ᛒ', 'F': 'ᛖ', 'G': 'ᛗ', 'H': 'ᛝ', 'I': 'ᛟ',\r\n        'J': 'ᛠ', 'K': 'ᛡ', 'L': 'ᛢ', 'M': 'ᛣ', 'N': 'ᛤ', 'O': 'ᛥ', 'P': 'ᛦ', 'Q': 'ᛧ', 'R': 'ᛨ',\r\n        'S': 'ᛩ', 'T': 'ᛪ', 'U': '᛫', 'V': '᛬', 'W': '᛭', 'X': 'ᛮ', 'Y': 'ᛯ', 'Z': 'ᛰ'\r\n    };\r\n    \r\n    const reversePigpenCipher = Object.fromEntries(\r\n        Object.entries(pigpenCipher).map(([letter, symbol]) => [symbol, letter])\r\n    );\r\n      \r\n    function encode(plaintext) {\r\n        return plaintext.toUpperCase().replace(/[^A-Z]/g, '').split('').map(char => pigpenCipher[char] || char).join('');\r\n    }\r\n\r\n    function decode(ciphertext) {\r\n        return ciphertext.split('').map(symbol => reversePigpenCipher[symbol] || symbol).join('');\r\n    }\r\n     \r\n\r\n  \r\n      return <CipherFactory encode={encode} decode={decode} />\r\n};\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAE9B,MAAMC,YAAY,GAAG;IACjB,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IACxF,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IACxF,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE,GAAG;IAAE,GAAG,EAAE;EAC/E,CAAC;EAED,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,WAAW,CAC1CD,MAAM,CAACE,OAAO,CAACJ,YAAY,CAAC,CAACK,GAAG,CAAC,CAAC,CAACC,MAAM,EAAEC,MAAM,CAAC,KAAK,CAACA,MAAM,EAAED,MAAM,CAAC,CAC3E,CAAC;EAED,SAASE,MAAMA,CAACC,SAAS,EAAE;IACvB,OAAOA,SAAS,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC,CAACP,GAAG,CAACQ,IAAI,IAAIb,YAAY,CAACa,IAAI,CAAC,IAAIA,IAAI,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACpH;EAEA,SAASC,MAAMA,CAACC,UAAU,EAAE;IACxB,OAAOA,UAAU,CAACJ,KAAK,CAAC,EAAE,CAAC,CAACP,GAAG,CAACE,MAAM,IAAIN,mBAAmB,CAACM,MAAM,CAAC,IAAIA,MAAM,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC;EAC7F;EAIE,oBAAOhB,OAAA,CAACF,aAAa;IAACY,MAAM,EAAEA,MAAO;IAACO,MAAM,EAAEA;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D;AAACC,EAAA,GAvBuBtB,OAAO;AAuB9B;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}