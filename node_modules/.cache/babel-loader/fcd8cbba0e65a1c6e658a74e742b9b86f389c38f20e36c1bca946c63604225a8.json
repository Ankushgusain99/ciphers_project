{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankus\\\\OneDrive\\\\Desktop\\\\Pro\\\\ciphers\\\\src\\\\components\\\\ciphers\\\\BookCipher.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport CipherFactory from '../../ui/EncryptDecrypt';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookCipher = ({\n  ongetInfo\n}) => {\n  _s();\n  function getPositionInKey(text, key) {\n    const positions = [];\n    const keyWords = key.split(/\\s+/);\n    for (let char of text) {\n      const charUpper = char.toUpperCase();\n      for (let i = 0; i < keyWords.length; i++) {\n        if (keyWords[i].includes(charUpper)) {\n          positions.push({\n            word: i + 1,\n            char: keyWords[i].indexOf(charUpper) + 1\n          });\n          break;\n        }\n      }\n    }\n    return positions;\n  }\n  function encode(plaintext, key) {\n    const positions = getPositionInKey(plaintext, key);\n    return positions.map(pos => `${pos.word}.${pos.char}`).join(' ');\n  }\n  function decode(ciphertext, key) {\n    const keyWords = key.split(/\\s+/);\n    const positions = ciphertext.split(' ');\n    let plaintext = '';\n    for (let pos of positions) {\n      const [wordIndex, charIndex] = pos.split('.').map(Number);\n      plaintext += keyWords[wordIndex - 1][charIndex - 1];\n    }\n    return plaintext;\n  }\n  const showInformation = () => {\n    const info = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The Beaufort Cipher is a variant of the Vigen\\xE8re cipher, employing a reversed alphabet key to encrypt and decrypt messages.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To encrypt using the Beaufort Cipher, each character of the plaintext is combined with a character from the key to produce the ciphertext.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Substitution Cipher: The Beaufort Cipher substitutes each plaintext character with a character determined by a combination of the plaintext and the key.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Key Length: Similar to the Vigen\\xE8re cipher, the key length in the Beaufort Cipher matches the length of the plaintext.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Encryption: To encrypt, each character in the plaintext is combined with a character from the key using a mathematical operation, typically modular subtraction or reversing the alphabet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Decryption: Decryption in the Beaufort Cipher involves reversing the encryption process by subtracting the key character from the ciphertext character to retrieve the plaintext character.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Example: For instance, using a key 'KEY', if 'H' in the plaintext is combined with 'K' from the key, the resulting ciphertext character might be 'S'.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true);\n    ongetInfo(info);\n  };\n  React.useEffect(() => {\n    showInformation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CipherFactory, {\n      encode: encode,\n      decode: decode,\n      keyComponentA: \"Key A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(BookCipher, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BookCipher;\nexport default BookCipher;\nvar _c;\n$RefreshReg$(_c, \"BookCipher\");","map":{"version":3,"names":["React","CipherFactory","jsxDEV","_jsxDEV","Fragment","_Fragment","BookCipher","ongetInfo","_s","getPositionInKey","text","key","positions","keyWords","split","char","charUpper","toUpperCase","i","length","includes","push","word","indexOf","encode","plaintext","map","pos","join","decode","ciphertext","wordIndex","charIndex","Number","showInformation","info","children","fileName","_jsxFileName","lineNumber","columnNumber","useEffect","keyComponentA","_c","$RefreshReg$"],"sources":["C:/Users/ankus/OneDrive/Desktop/Pro/ciphers/src/components/ciphers/BookCipher.js"],"sourcesContent":["import React from 'react'\r\nimport CipherFactory from '../../ui/EncryptDecrypt';\r\n\r\nconst BookCipher = ({ongetInfo}) => {\r\n  function getPositionInKey(text, key) {\r\n    const positions = [];\r\n    const keyWords = key.split(/\\s+/);\r\n\r\n    for (let char of text) {\r\n        const charUpper = char.toUpperCase();\r\n        for (let i = 0; i < keyWords.length; i++) {\r\n            if (keyWords[i].includes(charUpper)) {\r\n                positions.push({ word: i + 1, char: keyWords[i].indexOf(charUpper) + 1 });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return positions;\r\n}\r\n\r\nfunction encode(plaintext, key) {\r\n  const positions = getPositionInKey(plaintext, key);\r\n  return positions.map(pos => `${pos.word}.${pos.char}`).join(' ');\r\n}\r\n\r\nfunction decode(ciphertext, key) {\r\n  const keyWords = key.split(/\\s+/);\r\n  const positions = ciphertext.split(' ');\r\n  let plaintext = '';\r\n\r\n  for (let pos of positions) {\r\n      const [wordIndex, charIndex] = pos.split('.').map(Number);\r\n      plaintext += keyWords[wordIndex - 1][charIndex - 1];\r\n  }\r\n\r\n  return plaintext;\r\n}\r\n\r\nconst showInformation = () => {\r\n  const info = (\r\n      <>\r\n          <p>\r\nThe Beaufort Cipher is a variant of the Vigenère cipher, employing a reversed alphabet key to encrypt and decrypt messages.\r\n</p>\r\n<p>\r\nTo encrypt using the Beaufort Cipher, each character of the plaintext is combined with a character from the key to produce the ciphertext.\r\n</p>\r\n<ul>\r\n<li>Substitution Cipher: The Beaufort Cipher substitutes each plaintext character with a character determined by a combination of the plaintext and the key.</li>\r\n<li>Key Length: Similar to the Vigenère cipher, the key length in the Beaufort Cipher matches the length of the plaintext.</li>\r\n<li>Encryption: To encrypt, each character in the plaintext is combined with a character from the key using a mathematical operation, typically modular subtraction or reversing the alphabet.</li>\r\n<li>Decryption: Decryption in the Beaufort Cipher involves reversing the encryption process by subtracting the key character from the ciphertext character to retrieve the plaintext character.</li>\r\n<li>Example: For instance, using a key 'KEY', if 'H' in the plaintext is combined with 'K' from the key, the resulting ciphertext character might be 'S'.</li>\r\n</ul>\r\n\r\n      </>\r\n  );\r\n  ongetInfo(info);\r\n};\r\n\r\nReact.useEffect(() => {\r\n  showInformation();\r\n}, []);\r\n\r\n  return (\r\n    <div>\r\n        <CipherFactory encode={encode} decode={decode} keyComponentA=\"Key A\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookCipher\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,SAASC,gBAAgBA,CAACC,IAAI,EAAEC,GAAG,EAAE;IACnC,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,QAAQ,GAAGF,GAAG,CAACG,KAAK,CAAC,KAAK,CAAC;IAEjC,KAAK,IAAIC,IAAI,IAAIL,IAAI,EAAE;MACnB,MAAMM,SAAS,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;MACpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,IAAIL,QAAQ,CAACK,CAAC,CAAC,CAACE,QAAQ,CAACJ,SAAS,CAAC,EAAE;UACjCJ,SAAS,CAACS,IAAI,CAAC;YAAEC,IAAI,EAAEJ,CAAC,GAAG,CAAC;YAAEH,IAAI,EAAEF,QAAQ,CAACK,CAAC,CAAC,CAACK,OAAO,CAACP,SAAS,CAAC,GAAG;UAAE,CAAC,CAAC;UACzE;QACJ;MACJ;IACJ;IAEA,OAAOJ,SAAS;EACpB;EAEA,SAASY,MAAMA,CAACC,SAAS,EAAEd,GAAG,EAAE;IAC9B,MAAMC,SAAS,GAAGH,gBAAgB,CAACgB,SAAS,EAAEd,GAAG,CAAC;IAClD,OAAOC,SAAS,CAACc,GAAG,CAACC,GAAG,IAAK,GAAEA,GAAG,CAACL,IAAK,IAAGK,GAAG,CAACZ,IAAK,EAAC,CAAC,CAACa,IAAI,CAAC,GAAG,CAAC;EAClE;EAEA,SAASC,MAAMA,CAACC,UAAU,EAAEnB,GAAG,EAAE;IAC/B,MAAME,QAAQ,GAAGF,GAAG,CAACG,KAAK,CAAC,KAAK,CAAC;IACjC,MAAMF,SAAS,GAAGkB,UAAU,CAAChB,KAAK,CAAC,GAAG,CAAC;IACvC,IAAIW,SAAS,GAAG,EAAE;IAElB,KAAK,IAAIE,GAAG,IAAIf,SAAS,EAAE;MACvB,MAAM,CAACmB,SAAS,EAAEC,SAAS,CAAC,GAAGL,GAAG,CAACb,KAAK,CAAC,GAAG,CAAC,CAACY,GAAG,CAACO,MAAM,CAAC;MACzDR,SAAS,IAAIZ,QAAQ,CAACkB,SAAS,GAAG,CAAC,CAAC,CAACC,SAAS,GAAG,CAAC,CAAC;IACvD;IAEA,OAAOP,SAAS;EAClB;EAEA,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,IAAI,gBACNhC,OAAA,CAAAE,SAAA;MAAA+B,QAAA,gBACIjC,OAAA;QAAAiC,QAAA,EAAG;MAEb;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJrC,OAAA;QAAAiC,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJrC,OAAA;QAAAiC,QAAA,gBACAjC,OAAA;UAAAiC,QAAA,EAAI;QAAwJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjKrC,OAAA;UAAAiC,QAAA,EAAI;QAAsH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/HrC,OAAA;UAAAiC,QAAA,EAAI;QAA0L;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnMrC,OAAA;UAAAiC,QAAA,EAAI;QAA2L;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpMrC,OAAA;UAAAiC,QAAA,EAAI;QAAqJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1J,CAAC;IAAA,eAEG,CACL;IACDjC,SAAS,CAAC4B,IAAI,CAAC;EACjB,CAAC;EAEDnC,KAAK,CAACyC,SAAS,CAAC,MAAM;IACpBP,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACE/B,OAAA;IAAAiC,QAAA,eACIjC,OAAA,CAACF,aAAa;MAACuB,MAAM,EAAEA,MAAO;MAACK,MAAM,EAAEA,MAAO;MAACa,aAAa,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV,CAAC;AAAAhC,EAAA,CAnEKF,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAqEhB,eAAeA,UAAU;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}